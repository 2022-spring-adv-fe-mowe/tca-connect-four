{"ast":null,"code":"var _jsxFileName = \"/Users/ayumilee/Documents/2022-spring-adv-fe/tca-connect-four/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport { Routes, Route } from 'react-router-dom';\nimport { Home } from './Home';\nimport { Play } from './Play';\nimport { Stats } from './Stats';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst game1 = {\n  start: \"2022-02-14T15:14:30\",\n  end: \"2022-02-14T15:20:00\",\n  winner: \"Me\",\n  players: [{\n    name: \"Me\",\n    order: 1\n  }, {\n    name: \"Taylor\",\n    order: 2\n  }, {\n    name: \"Jack\",\n    order: 3\n  }]\n};\nconst game2 = {\n  start: \"2022-02-14T21:00:30\",\n  end: \"2022-02-14T21:30:30\",\n  winner: \"Stephanie\",\n  players: [{\n    name: \"Me\",\n    order: 1\n  }, {\n    name: \"Stephanie\",\n    order: 2\n  }, {\n    name: \"Jack\",\n    order: 3\n  }]\n};\nconst gameResults = [game1, game2];\n\nconst getUniquePlayers = results => [...new Set(results.flatMap(x => x.players.map(y => y.name)))];\n\nconst App = () => {\n  _s();\n\n  const [results, setResults] = useState(gameResults);\n  const [currentGame, setCurrentGame] = useState({\n    players: [],\n    start: \"\"\n  });\n\n  const addGameResult = gameResult => {\n    setResults([...results, gameResult]);\n    console.log(gameResults);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"play\",\n        element: /*#__PURE__*/_jsxDEV(Play, {\n          uniquePreviousPlayers: getUniquePlayers(results),\n          setCurrentGame: setCurrentGame\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"stats\",\n        element: /*#__PURE__*/_jsxDEV(Stats, {\n          addGameResult: addGameResult,\n          currentGame: currentGame\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"FWW3Kg/9po4U5y+NVHsm6UE8v+Y=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ayumilee/Documents/2022-spring-adv-fe/tca-connect-four/src/App.js"],"names":["logo","Routes","Route","Home","Play","Stats","useState","game1","start","end","winner","players","name","order","game2","gameResults","getUniquePlayers","results","Set","flatMap","x","map","y","App","setResults","currentGame","setCurrentGame","addGameResult","gameResult","console","log"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { Routes, Route } from 'react-router-dom';\nimport { Home } from './Home';\nimport { Play } from './Play';\nimport { Stats } from './Stats';\nimport { useState } from 'react';\n\n\n\nconst game1 = {\n  start: \"2022-02-14T15:14:30\"\n  , end: \"2022-02-14T15:20:00\"\n  , winner: \"Me\"\n  , players: [{ name: \"Me\", order: 1}, { name: \"Taylor\", order: 2}, {name: \"Jack\", order: 3}]\n};\n\nconst game2 = {\n  start: \"2022-02-14T21:00:30\"\n  , end: \"2022-02-14T21:30:30\"\n  , winner: \"Stephanie\"\n  , players: [{ name: \"Me\", order: 1}, { name: \"Stephanie\", order: 2}, {name: \"Jack\", order: 3}]\n};\n\nconst gameResults = [\n  game1\n  , game2\n];\n\nconst getUniquePlayers = (results) => (\n  [... new Set(results.flatMap(x => x.players.map(y => y.name)))]\n);\n\n\nconst App = () => {\n\n  const [results, setResults] = useState(gameResults);\n  const [currentGame, setCurrentGame] = useState({\n    players: []\n    , start: \"\"\n  });\n\n  const addGameResult = (gameResult) => {\n    setResults(\n      [\n        ...results\n        , gameResult\n      ]\n    );\n  \n    console.log(gameResults);\n  };\n  \n  return (\n    <div className=\"App\">\n      <Routes>\n        {/* <Route path=\"/\" element={\n          <Home \n            gameResults={results}\n          />\n        } /> */}\n        <Route path=\"play\" element={\n          <Play \n            uniquePreviousPlayers={getUniquePlayers(results)}\n            setCurrentGame={setCurrentGame}\n          />\n        } />\n        <Route path=\"stats\" element={\n          <Stats \n            addGameResult={addGameResult}\n            currentGame={currentGame}\n          />\n        } />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n\n\n"]},"metadata":{},"sourceType":"module"}